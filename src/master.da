import sys
import logging
import configparser

from application import Application
from comp.coordinator import Coordinator
from comp.worker import Worker
from db.db import DB
from util.router import Router

log = logging.getLogger(__name__)

class Master(process):

    def setup(): pass

    def run():
        cfg = configparser.ConfigParser()
        cfg.read(sys.argv[1]);
        workload = sys.argv[2]

        db = new(DB, num=1)
        # setup paramters
        # 1st: policy filename
        # 2nd: min latency
        # 3rd: max latency
        path = './src/db/' + cfg['db']['policy']

        # Start workers
        w = new(Worker, (db,), num=int(cfg['master']['workers']))
        start(w)

        setup(db, (path, cfg['db']['minDBlatency'], cfg['db']['maxDBlatency'], w))
        start(db)

        # Start coordinators
        co = new(Coordinator, (w, db, cfg[workload],), num=int(cfg['master']['coordinators']))
        start(co)

        # Distribute subjects/resource to coordinator pool uniformly
        router = Router()
        router.assign(getSubjects(), getResources(), co)
        for c in co:
            send(('routetbl', router,), to=c)

        # Start client to test
        c = new(Application, (router, cfg[workload],), num=int(cfg['master']['clients']))
        start(c)

    def getSubjects():
        return ["subject1", "subject2"]

    def getResources():
        return ["resource1", "resource2"]

def main():
    config(channel= 'fifo', clock='lamport')
    start(new(Master))

