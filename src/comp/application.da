import logging
import time
import random

from msg.evalreq import EvalReq
from util.router import Router

log = logging.getLogger("Application")

class Application(process):

    def setup(router:Router, seqfrom:int, seqto:int, cfg, subjects, resources):
        pass

    def run():
        log.info("Application is up: ready to send request from [%d] to [%d]", seqfrom, seqto - 1)
        for i in range(seqfrom, seqto):
            req = EvalReq()
            req.seq = i

            prefix = 'req' + str(i)
            if prefix + '.subject' in cfg:
                req.subject = cfg[prefix + '.subject']
            else:
                req.subject = random.choice(subjects)

            if prefix + '.resource' in cfg:
                req.resource= cfg[prefix + '.resource']
            else:
                req.resource = random.choice(resources)

            if prefix + '.action' in cfg:
                req.action = cfg[prefix + '.action']
            else:
                req.action = 'read'

            sc = router.getSC(req.subject)
            log.info("App - Send request #seq [%d] to SC %s", i, sc)
            send(('reqapp', req,), to=sc)

            if 'reqinterval' in cfg:
                time.sleep(float(cfg['reqinterval']))

        #clk = logical_clock()
        #await(some(received(('done',), clk=rclk), has=(rclk > clk)))
        log.info("App - Waiting for response")
        await(received('done'))

    def receive(msg=('respapp', result,), from_=sc):
        log.info("Received request result: %s from subject coordinator %s", result, sc)
