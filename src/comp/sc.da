import logging
import threading

log = logging.getLogger("SC")

class SC(process):

    def setup(rcmap:dict):
        self.lock = threading.Lock()
        self.cnt = 0
        self.tAttr = set()

    def run():
        log.info("SC is up")
        #while True:
        #    await(received(('req', req))) #or received('resp',)))
        await(received(('done',)))

    def receive(msg=('req', req,), from_=p):
        log.info("Incoming request: subject=[%s]", req.subject)
        assignId(req)
        req.client = p
        req.tAttr = tAttr
        send((req,), to=rcmap['resource1'])

    def receive(msg=('resp', resp,), from_=p):
        log.info("Incoming response")
        if conflict(resp):
            restart()
        else:
            restart()
        send('done', to=resp.client)

    def assignId(req):
        lock.acquire()
        req.id = cnt
        cnt += 1
        lock.release()

    def conflict(resp):
        return False 

    def restart():
        pass

